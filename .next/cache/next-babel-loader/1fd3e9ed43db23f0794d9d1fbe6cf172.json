{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { EmptyCartContainer, CartLogoComponent, EmptyTitle, EmptySubtitle, MatchedItems, MatchedItem, ImageItem, TextItem, AddItem } from './cart-container.styles';\nimport ITEMS_DATA from '../../../public/items-data';\n\nvar CartContainer = function CartContainer(_ref) {\n  _s();\n\n  var searchBarInput = _ref.searchBarInput;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isItemAdded = _React$useState2[0],\n      setIsItemAdded = _React$useState2[1];\n\n  var filteredItems = ITEMS_DATA.items.filter(function (item) {\n    return item.name.toLowerCase().includes(searchBarInput);\n  });\n  return searchBarInput.length === 0 ? __jsx(EmptyCartContainer, null, __jsx(CartLogoComponent, null), __jsx(EmptyTitle, null, \"Your cart is empty\"), __jsx(EmptySubtitle, null, \"Seems like you haven't chosen what to buy...\")) : __jsx(MatchedItems, null, filteredItems.map(function (item, idx) {\n    return __jsx(MatchedItem, {\n      key: idx\n    }, __jsx(ImageItem, {\n      imageSrc: item.imageUrl\n    }), __jsx(TextItem, null, \" \", item.name, \" \"), __jsx(TextItem, {\n      price: true\n    }, \" \", \"$\".concat(parseFloat(item.price).toFixed(2)), \" \"), __jsx(AddItem, {\n      itemAdded: isItemAdded,\n      onClick: function onClick() {\n        console.log(\"CLICK!\");\n      }\n    }));\n  }));\n};\n\n_s(CartContainer, \"YsZkyXHye3pIYUG6WLuz5TForhc=\");\n\n_c = CartContainer;\nexport default CartContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContainer\");","map":{"version":3,"sources":["/home/mellamoarroz/Documents/RiqraChallenger/src/components/cart-container/cart-container.component.jsx"],"names":["React","EmptyCartContainer","CartLogoComponent","EmptyTitle","EmptySubtitle","MatchedItems","MatchedItem","ImageItem","TextItem","AddItem","ITEMS_DATA","CartContainer","searchBarInput","useState","isItemAdded","setIsItemAdded","filteredItems","items","filter","item","name","toLowerCase","includes","length","map","idx","imageUrl","parseFloat","price","toFixed","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,kBADF,EAEEC,iBAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,WANF,EAOEC,SAPF,EAQEC,QARF,EASEC,OATF,QAUQ,yBAVR;AAWC,OAAOC,UAAP,MAAuB,4BAAvB;;AAED,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAwB;AAAA;;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;;AAAA,wBACNZ,KAAK,CAACa,QAAN,CAAe,KAAf,CADM;AAAA;AAAA,MACrCC,WADqC;AAAA,MACxBC,cADwB;;AAE5C,MAAMC,aAAa,GAAGN,UAAU,CAACO,KAAX,CAAiBC,MAAjB,CAAwB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCV,cAAjC,CAAJ;AAAA,GAA5B,CAAtB;AAEA,SACEA,cAAc,CAACW,MAAf,KAA0B,CAA1B,GAEA,MAAC,kBAAD,QACE,MAAC,iBAAD,OADF,EAEE,MAAC,UAAD,6BAFF,EAKE,MAAC,aAAD,uDALF,CAFA,GAYA,MAAC,YAAD,QAEEP,aAAa,CAACQ,GAAd,CAAkB,UAACL,IAAD,EAAOM,GAAP,EAAe;AAC/B,WACE,MAAC,WAAD;AAAa,MAAA,GAAG,EAAEA;AAAlB,OACE,MAAC,SAAD;AAAW,MAAA,QAAQ,EAAEN,IAAI,CAACO;AAA1B,MADF,EAEE,MAAC,QAAD,aAAYP,IAAI,CAACC,IAAjB,MAFF,EAGE,MAAC,QAAD;AAAU,MAAA,KAAK;AAAf,uBAAsBO,UAAU,CAACR,IAAI,CAACS,KAAN,CAAV,CAAuBC,OAAvB,CAA+B,CAA/B,CAAtB,OAHF,EAIE,MAAC,OAAD;AAAS,MAAA,SAAS,EAAEf,WAApB;AAAiC,MAAA,OAAO,EAAE,mBAAM;AAACgB,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAAsB;AAAvE,MAJF,CADF;AAQD,GATD,CAFF,CAbF;AA4BD,CAhCD;;GAAMpB,a;;KAAAA,a;AAkCN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport { \n  EmptyCartContainer, \n  CartLogoComponent,\n  EmptyTitle,\n  EmptySubtitle,\n  MatchedItems,\n  MatchedItem,\n  ImageItem,\n  TextItem,\n  AddItem\n } from './cart-container.styles';\n import ITEMS_DATA from '../../../public/items-data';\n\nconst CartContainer = ({ searchBarInput }) => {\n  const [isItemAdded, setIsItemAdded] = React.useState(false) \n  const filteredItems = ITEMS_DATA.items.filter(item => item.name.toLowerCase().includes(searchBarInput))\n  \n  return (\n    searchBarInput.length === 0\n    ?\n    <EmptyCartContainer>\n      <CartLogoComponent/>\n      <EmptyTitle>\n        Your cart is empty\n      </EmptyTitle>\n      <EmptySubtitle>\n        Seems like you haven't chosen what to buy...\n      </EmptySubtitle>\n    </EmptyCartContainer>\n    :\n    <MatchedItems>\n    {\n      filteredItems.map((item, idx) => {\n        return (\n          <MatchedItem key={idx}>\n            <ImageItem imageSrc={item.imageUrl}/>\n            <TextItem> {item.name} </TextItem>\n            <TextItem price> {`$${parseFloat(item.price).toFixed(2)}`} </TextItem>\n            <AddItem itemAdded={isItemAdded} onClick={() => {console.log(\"CLICK!\")}}/>\n          </MatchedItem>\n        )\n      })\n    }\n    </MatchedItems>\n  )\n}\n\nexport default CartContainer;"]},"metadata":{},"sourceType":"module"}