{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { EmptyCartContainer, CartLogoComponent, EmptyTitle, EmptySubtitle, MatchedItems, MatchedItem, ImageItem, TextItem, AddItem } from './cart-container.styles';\nimport ITEMS_DATA from '../../../public/items-data';\n\nvar CartContainer = function CartContainer(_ref) {\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  var searchBarInput = _ref.searchBarInput,\n      cartItems = _ref.cartItems,\n      setCartItems = _ref.setCartItems;\n  var filteredItems = ITEMS_DATA.items.filter(function (item) {\n    return item.name.toLowerCase().includes(searchBarInput);\n  });\n  return searchBarInput.length === 0 ? Object.values(cartItems).length === 0 ? __jsx(EmptyCartContainer, null, __jsx(CartLogoComponent, null), __jsx(EmptyTitle, null, \"Your cart is empty\"), __jsx(EmptySubtitle, null, \"Seems like you haven't chosen what to buy...\")) : __jsx(MatchedItems, null, cartItems.map(_s(function (item, idx) {\n    _s();\n\n    var _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        isItemAdded = _React$useState2[0],\n        setIsItemAdded = _React$useState2[1];\n\n    return __jsx(MatchedItem, {\n      key: idx\n    }, __jsx(ImageItem, {\n      imageSrc: item.imageUrl\n    }), __jsx(TextItem, null, \" \", item.name, \" \"), __jsx(TextItem, {\n      price: true\n    }, \" \", \"$\".concat(parseFloat(item.price).toFixed(2)), \" \"), __jsx(AddItem, {\n      itemAdded: isItemAdded,\n      onClick: function onClick() {\n        setIsItemAdded(true);\n        setCartItems(_objectSpread(_objectSpread({}, cartItems), {}, {\n          item: item\n        }));\n      }\n    }));\n  }, \"YsZkyXHye3pIYUG6WLuz5TForhc=\"))) : __jsx(MatchedItems, null, filteredItems.map(_s2(function (item, idx) {\n    _s2();\n\n    var _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        isItemAdded = _React$useState4[0],\n        setIsItemAdded = _React$useState4[1];\n\n    return __jsx(MatchedItem, {\n      key: idx\n    }, __jsx(ImageItem, {\n      imageSrc: item.imageUrl\n    }), __jsx(TextItem, null, \" \", item.name, \" \"), __jsx(TextItem, {\n      price: true\n    }, \" \", \"$\".concat(parseFloat(item.price).toFixed(2)), \" \"), __jsx(AddItem, {\n      itemAdded: isItemAdded,\n      onClick: function onClick() {\n        setIsItemAdded(true);\n        setCartItems(_objectSpread(_objectSpread({}, cartItems), {}, {\n          item: item\n        }));\n      }\n    }));\n  }, \"YsZkyXHye3pIYUG6WLuz5TForhc=\")));\n};\n\n_c = CartContainer;\nexport default CartContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContainer\");","map":{"version":3,"sources":["/home/mellamoarroz/Documents/RiqraChallenger/src/components/cart-container/cart-container.component.jsx"],"names":["React","EmptyCartContainer","CartLogoComponent","EmptyTitle","EmptySubtitle","MatchedItems","MatchedItem","ImageItem","TextItem","AddItem","ITEMS_DATA","CartContainer","searchBarInput","cartItems","setCartItems","filteredItems","items","filter","item","name","toLowerCase","includes","length","Object","values","map","idx","useState","isItemAdded","setIsItemAdded","imageUrl","parseFloat","price","toFixed"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,kBADF,EAEEC,iBAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,WANF,EAOEC,SAPF,EAQEC,QARF,EASEC,OATF,QAUQ,yBAVR;AAWC,OAAOC,UAAP,MAAuB,4BAAvB;;AAED,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAiD;AAAA;AAAA;;AAAA,MAA9CC,cAA8C,QAA9CA,cAA8C;AAAA,MAA9BC,SAA8B,QAA9BA,SAA8B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AACrE,MAAMC,aAAa,GAAGL,UAAU,CAACM,KAAX,CAAiBC,MAAjB,CAAwB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCT,cAAjC,CAAJ;AAAA,GAA5B,CAAtB;AAEA,SACEA,cAAc,CAACU,MAAf,KAA0B,CAA1B,GAEEC,MAAM,CAACC,MAAP,CAAcX,SAAd,EAAyBS,MAAzB,KAAoC,CAApC,GAEE,MAAC,kBAAD,QACE,MAAC,iBAAD,OADF,EAEE,MAAC,UAAD,6BAFF,EAKE,MAAC,aAAD,uDALF,CAFF,GAYE,MAAC,YAAD,QAEET,SAAS,CAACY,GAAV,IAAc,UAACP,IAAD,EAAOQ,GAAP,EAAe;AAAA;;AAAA,0BACW1B,KAAK,CAAC2B,QAAN,CAAe,KAAf,CADX;AAAA;AAAA,QACpBC,WADoB;AAAA,QACPC,cADO;;AAE3B,WACE,MAAC,WAAD;AAAa,MAAA,GAAG,EAAEH;AAAlB,OACE,MAAC,SAAD;AAAW,MAAA,QAAQ,EAAER,IAAI,CAACY;AAA1B,MADF,EAEE,MAAC,QAAD,aAAYZ,IAAI,CAACC,IAAjB,MAFF,EAGE,MAAC,QAAD;AAAU,MAAA,KAAK;AAAf,uBAAsBY,UAAU,CAACb,IAAI,CAACc,KAAN,CAAV,CAAuBC,OAAvB,CAA+B,CAA/B,CAAtB,OAHF,EAIE,MAAC,OAAD;AAAS,MAAA,SAAS,EAAEL,WAApB;AAAiC,MAAA,OAAO,EAAE,mBAAM;AAC9CC,QAAAA,cAAc,CAAC,IAAD,CAAd;AACAf,QAAAA,YAAY,iCACPD,SADO;AAEVK,UAAAA,IAAI,EAAJA;AAFU,WAAZ;AAID;AAND,MAJF,CADF;AAcD,GAhBD,kCAFF,CAdJ,GAoCE,MAAC,YAAD,QAEEH,aAAa,CAACU,GAAd,KAAkB,UAACP,IAAD,EAAOQ,GAAP,EAAe;AAAA;;AAAA,2BACO1B,KAAK,CAAC2B,QAAN,CAAe,KAAf,CADP;AAAA;AAAA,QACxBC,WADwB;AAAA,QACXC,cADW;;AAE/B,WACE,MAAC,WAAD;AAAa,MAAA,GAAG,EAAEH;AAAlB,OACE,MAAC,SAAD;AAAW,MAAA,QAAQ,EAAER,IAAI,CAACY;AAA1B,MADF,EAEE,MAAC,QAAD,aAAYZ,IAAI,CAACC,IAAjB,MAFF,EAGE,MAAC,QAAD;AAAU,MAAA,KAAK;AAAf,uBAAsBY,UAAU,CAACb,IAAI,CAACc,KAAN,CAAV,CAAuBC,OAAvB,CAA+B,CAA/B,CAAtB,OAHF,EAIE,MAAC,OAAD;AAAS,MAAA,SAAS,EAAEL,WAApB;AAAiC,MAAA,OAAO,EAAE,mBAAM;AAC9CC,QAAAA,cAAc,CAAC,IAAD,CAAd;AACAf,QAAAA,YAAY,iCACPD,SADO;AAEVK,UAAAA,IAAI,EAAJA;AAFU,WAAZ;AAID;AAND,MAJF,CADF;AAcD,GAhBD,kCAFF,CArCJ;AA2DD,CA9DD;;KAAMP,a;AAgEN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport { \n  EmptyCartContainer, \n  CartLogoComponent,\n  EmptyTitle,\n  EmptySubtitle,\n  MatchedItems,\n  MatchedItem,\n  ImageItem,\n  TextItem,\n  AddItem\n } from './cart-container.styles';\n import ITEMS_DATA from '../../../public/items-data';\n\nconst CartContainer = ({ searchBarInput, cartItems, setCartItems }) => {\n  const filteredItems = ITEMS_DATA.items.filter(item => item.name.toLowerCase().includes(searchBarInput))\n  \n  return (\n    searchBarInput.length === 0\n    ?\n      Object.values(cartItems).length === 0\n      ?\n        <EmptyCartContainer>\n          <CartLogoComponent/>\n          <EmptyTitle>\n            Your cart is empty\n          </EmptyTitle>\n          <EmptySubtitle>\n            Seems like you haven't chosen what to buy...\n          </EmptySubtitle>\n        </EmptyCartContainer>\n      :\n        <MatchedItems>\n        {  \n          cartItems.map((item, idx) => {\n            const [isItemAdded, setIsItemAdded] = React.useState(false)\n            return (\n              <MatchedItem key={idx}>\n                <ImageItem imageSrc={item.imageUrl}/>\n                <TextItem> {item.name} </TextItem>\n                <TextItem price> {`$${parseFloat(item.price).toFixed(2)}`} </TextItem>\n                <AddItem itemAdded={isItemAdded} onClick={() => {\n                  setIsItemAdded(true)\n                  setCartItems({\n                    ...cartItems,\n                    item\n                  })\n                }}/>\n              </MatchedItem>\n            )\n          })\n        }\n        </MatchedItems>\n    :\n      <MatchedItems>\n      {\n        filteredItems.map((item, idx) => {\n          const [isItemAdded, setIsItemAdded] = React.useState(false)\n          return (\n            <MatchedItem key={idx}>\n              <ImageItem imageSrc={item.imageUrl}/>\n              <TextItem> {item.name} </TextItem>\n              <TextItem price> {`$${parseFloat(item.price).toFixed(2)}`} </TextItem>\n              <AddItem itemAdded={isItemAdded} onClick={() => {\n                setIsItemAdded(true)\n                setCartItems({\n                  ...cartItems,\n                  item\n                })\n              }}/>\n            </MatchedItem>\n          )\n        })\n      }\n    </MatchedItems>\n  )\n}\n\nexport default CartContainer;"]},"metadata":{},"sourceType":"module"}