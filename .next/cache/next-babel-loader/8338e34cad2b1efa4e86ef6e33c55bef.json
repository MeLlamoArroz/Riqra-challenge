{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Pricing, DetailedPrice } from './prices-container.styles';\n\nvar PricesContainer = function PricesContainer(_ref) {\n  _s();\n\n  var cartItems = _ref.cartItems,\n      totalPrice = _ref.totalPrice,\n      setTotalPrice = _ref.setTotalPrice;\n  var productsCost = cartItems.reduce(function (acum, currentItem) {\n    return acum + currentItem.price * currentItem.quantity;\n  }, 0);\n  var shippingCost = 10 * productsCost / 100;\n  var taxCost = 18 * productsCost / 100;\n  React.useEffect(function () {\n    setTotalPrice(parseFloat(productsCost + shippingCost).toFixed(2));\n  }, [productsCost]);\n  return __jsx(Pricing, null, __jsx(DetailedPrice, null, __jsx(\"span\", null, \"Products\"), __jsx(\"span\", null, \"$\".concat(parseFloat(productsCost).toFixed(2)))), __jsx(DetailedPrice, {\n    shipping: true\n  }, __jsx(\"span\", {\n    style: {\n      fontWeight: '600'\n    }\n  }, \"Shipping Cost\"), __jsx(\"span\", null, \"$\".concat(parseFloat(shippingCost).toFixed(2)))), __jsx(DetailedPrice, null, __jsx(\"span\", null, \"Taxes\"), __jsx(\"span\", null, \"$\".concat(parseFloat(taxCost).toFixed(2)))), __jsx(DetailedPrice, {\n    total: true\n  }, __jsx(\"span\", {\n    style: {\n      fontWeight: '600'\n    }\n  }, \"Total\"), __jsx(\"span\", {\n    style: {\n      color: 'red',\n      fontWeight: '600'\n    }\n  }, \"$\".concat(parseFloat(totalPrice).toFixed(2)))));\n};\n\n_s(PricesContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PricesContainer;\nexport default PricesContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PricesContainer\");","map":{"version":3,"sources":["/home/mellamoarroz/Documents/RiqraChallenger/src/components/prices-container/prices-container.component.jsx"],"names":["React","Pricing","DetailedPrice","PricesContainer","cartItems","totalPrice","setTotalPrice","productsCost","reduce","acum","currentItem","price","quantity","shippingCost","taxCost","useEffect","parseFloat","toFixed","fontWeight","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,2BAAvC;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAA8C;AAAA;;AAAA,MAA3CC,SAA2C,QAA3CA,SAA2C;AAAA,MAAhCC,UAAgC,QAAhCA,UAAgC;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;AACpE,MAAMC,YAAY,GAAGH,SAAS,CAACI,MAAV,CAAiB,UAACC,IAAD,EAAOC,WAAP;AAAA,WACpCD,IAAI,GAAIC,WAAW,CAACC,KAAZ,GAAoBD,WAAW,CAACE,QADJ;AAAA,GAAjB,EAEnB,CAFmB,CAArB;AAGA,MAAMC,YAAY,GAAI,KAAKN,YAAN,GAAsB,GAA3C;AACA,MAAMO,OAAO,GAAI,KAAKP,YAAN,GAAsB,GAAtC;AAEAP,EAAAA,KAAK,CAACe,SAAN,CAAgB,YAAM;AACpBT,IAAAA,aAAa,CAACU,UAAU,CAACT,YAAY,GAAGM,YAAhB,CAAV,CAAwCI,OAAxC,CAAgD,CAAhD,CAAD,CAAb;AACD,GAFD,EAEE,CAACV,YAAD,CAFF;AAIA,SACE,MAAC,OAAD,QACE,MAAC,aAAD,QACE,+BADF,EAIE,+BACOS,UAAU,CAACT,YAAD,CAAV,CAAyBU,OAAzB,CAAiC,CAAjC,CADP,EAJF,CADF,EASE,MAAC,aAAD;AAAe,IAAA,QAAQ;AAAvB,KACE;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAC;AAAZ;AAAb,qBADF,EAIE,+BACOF,UAAU,CAACH,YAAD,CAAV,CAAyBI,OAAzB,CAAiC,CAAjC,CADP,EAJF,CATF,EAiBE,MAAC,aAAD,QACE,4BADF,EAIE,+BACOD,UAAU,CAACF,OAAD,CAAV,CAAoBG,OAApB,CAA4B,CAA5B,CADP,EAJF,CAjBF,EAyBE,MAAC,aAAD;AAAe,IAAA,KAAK;AAApB,KACE;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAC;AAAZ;AAAb,aADF,EAIE;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC,KAAP;AAAcD,MAAAA,UAAU,EAAC;AAAzB;AAAb,gBACOF,UAAU,CAACX,UAAD,CAAV,CAAuBY,OAAvB,CAA+B,CAA/B,CADP,EAJF,CAzBF,CADF;AAoCD,CA/CD;;GAAMd,e;;KAAAA,e;AAiDN,eAAeA,eAAf","sourcesContent":["import React from 'react';\nimport { Pricing, DetailedPrice } from './prices-container.styles';\n\nconst PricesContainer = ({ cartItems, totalPrice, setTotalPrice }) => {\n  const productsCost = cartItems.reduce((acum, currentItem) =>\n    acum + (currentItem.price * currentItem.quantity)\n  , 0)\n  const shippingCost = (10 * productsCost) / 100\n  const taxCost = (18 * productsCost) / 100\n\n  React.useEffect(() => {\n    setTotalPrice(parseFloat(productsCost + shippingCost).toFixed(2))\n  },[productsCost])\n\n  return (\n    <Pricing>\n      <DetailedPrice>\n        <span>\n          Products\n        </span>\n        <span>\n          {`$${parseFloat(productsCost).toFixed(2)}`}\n        </span>\n      </DetailedPrice>\n      <DetailedPrice shipping>\n        <span style={{fontWeight:'600'}}>\n          Shipping Cost\n        </span>\n        <span>\n          {`$${parseFloat(shippingCost).toFixed(2)}`}\n        </span>\n      </DetailedPrice>\n      <DetailedPrice>\n        <span>\n          Taxes\n        </span>\n        <span>\n          {`$${parseFloat(taxCost).toFixed(2)}`}\n        </span>\n      </DetailedPrice>\n      <DetailedPrice total>\n        <span style={{fontWeight:'600'}}>\n          Total\n        </span>\n        <span style={{color:'red', fontWeight:'600'}}>\n          {`$${parseFloat(totalPrice).toFixed(2)}`}\n        </span>\n      </DetailedPrice>\n    </Pricing>\n  )\n}\n\nexport default PricesContainer;"]},"metadata":{},"sourceType":"module"}