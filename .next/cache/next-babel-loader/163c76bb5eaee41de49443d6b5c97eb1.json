{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { EmptyCartContainer, CartLogoComponent, EmptyTitle, EmptySubtitle, MatchedItems, MatchedItem, ImageItem, TextItem, AddItem } from './cart-container.styles';\nimport ITEMS_DATA from '../../../public/items-data';\n\nconst CartContainer = ({\n  searchBarInput,\n  setSearchBar,\n  cartItems,\n  setCartItems\n}) => {\n  const filteredItems = ITEMS_DATA.items.filter(item => item.name.toLowerCase().includes(searchBarInput));\n  console.log(\"cartItems : \", cartItems);\n  return searchBarInput.length === 0 ? Object.values(cartItems).length === 0 ? __jsx(EmptyCartContainer, null, __jsx(CartLogoComponent, null), __jsx(EmptyTitle, null, \"Your cart is empty\"), __jsx(EmptySubtitle, null, \"Seems like you haven't chosen what to buy...\")) : __jsx(MatchedItems, null, Object.values(cartItems).map((item, idx) => {\n    return __jsx(MatchedItem, {\n      key: idx\n    }, __jsx(ImageItem, {\n      imageSrc: item.imageUrl\n    }), __jsx(TextItem, null, \" \", item.name, \" \"), __jsx(TextItem, {\n      price: true\n    }, \" \", `$${parseFloat(item.price).toFixed(2)}`, \" \"));\n  })) : __jsx(MatchedItems, null, filteredItems.map((item, idx) => {\n    return __jsx(MatchedItem, {\n      key: idx\n    }, __jsx(ImageItem, {\n      imageSrc: item.imageUrl\n    }), __jsx(TextItem, null, \" \", item.name, \" \"), __jsx(TextItem, {\n      price: true\n    }, \" \", `$${parseFloat(item.price).toFixed(2)}`, \" \"), __jsx(AddItem, {\n      onClick: () => {\n        const exists = cartItems.find(cartItem => cartItem.id === item.id);\n        console.log(\"MIRA!! : \", exists);\n        document.getElementsByTagName('input')[0].value = '';\n        setSearchBar('');\n        setCartItems(cartItems.length ? exists ? cartItems.map(cartItem => cartItem.id === exists.id ? _objectSpread(_objectSpread({}, cartItem), {}, {\n          quantity: exists.quantity + 1\n        }) : cartItem) : [...cartItems, item] : [...cartItems, _objectSpread(_objectSpread({}, item), {}, {\n          quantity: 1\n        })]);\n      }\n    }));\n  }));\n};\n\nexport default CartContainer;","map":{"version":3,"sources":["/home/mellamoarroz/Documents/RiqraChallenger/src/components/cart-container/cart-container.component.jsx"],"names":["React","EmptyCartContainer","CartLogoComponent","EmptyTitle","EmptySubtitle","MatchedItems","MatchedItem","ImageItem","TextItem","AddItem","ITEMS_DATA","CartContainer","searchBarInput","setSearchBar","cartItems","setCartItems","filteredItems","items","filter","item","name","toLowerCase","includes","console","log","length","Object","values","map","idx","imageUrl","parseFloat","price","toFixed","exists","find","cartItem","id","document","getElementsByTagName","value","quantity"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { \n  EmptyCartContainer, \n  CartLogoComponent,\n  EmptyTitle,\n  EmptySubtitle,\n  MatchedItems,\n  MatchedItem,\n  ImageItem,\n  TextItem,\n  AddItem\n } from './cart-container.styles';\n import ITEMS_DATA from '../../../public/items-data';\n\nconst CartContainer = ({ searchBarInput, setSearchBar, cartItems, setCartItems }) => {\n  const filteredItems = ITEMS_DATA.items.filter(item => item.name.toLowerCase().includes(searchBarInput))\n  console.log(\"cartItems : \", cartItems)\n\n  return (\n    searchBarInput.length === 0\n    ?\n      Object.values(cartItems).length === 0\n      ?\n        <EmptyCartContainer>\n          <CartLogoComponent/>\n          <EmptyTitle>\n            Your cart is empty\n          </EmptyTitle>\n          <EmptySubtitle>\n            Seems like you haven't chosen what to buy...\n          </EmptySubtitle>\n        </EmptyCartContainer>\n      :\n        <MatchedItems>\n        {  \n          Object.values(cartItems).map((item, idx) => {\n            return (\n              <MatchedItem key={idx}>\n                <ImageItem imageSrc={item.imageUrl}/>\n                <TextItem> {item.name} </TextItem>\n                <TextItem price> {`$${parseFloat(item.price).toFixed(2)}`} </TextItem>\n              </MatchedItem>\n            )\n          })\n        }\n        </MatchedItems>\n    :\n      <MatchedItems>\n      {\n        filteredItems.map((item, idx) => {\n          return (\n            <MatchedItem key={idx}>\n              <ImageItem imageSrc={item.imageUrl}/>\n              <TextItem> {item.name} </TextItem>\n              <TextItem price> {`$${parseFloat(item.price).toFixed(2)}`} </TextItem>\n              <AddItem onClick={() => {\n                const exists = cartItems.find(cartItem => cartItem.id === item.id)\n                console.log(\"MIRA!! : \", exists)\n\n                document.getElementsByTagName('input')[0].value = ''\n                setSearchBar('')\n                setCartItems(\n                  cartItems.length\n                  ?\n                    exists\n                    ?\n                      cartItems.map(cartItem => cartItem.id === exists.id ? {...cartItem, quantity: exists.quantity + 1} : cartItem)\n                    :\n                      [...cartItems, item]\n                  :\n                    [...cartItems, {...item, quantity: 1}]\n                )\n              }}/>\n            </MatchedItem>\n          )\n        })\n      }\n    </MatchedItems>\n  )\n}\n\nexport default CartContainer;"]},"metadata":{},"sourceType":"module"}