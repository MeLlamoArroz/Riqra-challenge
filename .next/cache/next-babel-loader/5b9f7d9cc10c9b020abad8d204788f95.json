{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { EmptyCartContainer, CartLogoComponent, EmptyTitle, EmptySubtitle, MatchedItems, MatchedItem, ImageItem, TextItem, AddItem } from './cart-container.styles';\nimport ITEMS_DATA from '../../../public/items-data';\n\nconst CartContainer = ({\n  searchBarInput,\n  cartItems,\n  setCartItems\n}) => {\n  const filteredItems = ITEMS_DATA.items.filter(item => item.name.toLowerCase().includes(searchBarInput));\n  return searchBarInput.length === 0 ? cartItems.length === 0 ? __jsx(EmptyCartContainer, null, __jsx(CartLogoComponent, null), __jsx(EmptyTitle, null, \"Your cart is empty\"), __jsx(EmptySubtitle, null, \"Seems like you haven't chosen what to buy...\")) : __jsx(\"div\", null) : __jsx(MatchedItems, null, filteredItems.map((item, idx) => {\n    const [isItemAdded, setIsItemAdded] = React.useState(false);\n    return __jsx(MatchedItem, {\n      key: idx\n    }, __jsx(ImageItem, {\n      imageSrc: item.imageUrl\n    }), __jsx(TextItem, null, \" \", item.name, \" \"), __jsx(TextItem, {\n      price: true\n    }, \" \", `$${parseFloat(item.price).toFixed(2)}`, \" \"), __jsx(AddItem, {\n      itemAdded: isItemAdded,\n      onClick: () => {\n        setIsItemAdded(true);\n        setCartItems({});\n      }\n    }));\n  }));\n};\n\nexport default CartContainer;","map":{"version":3,"sources":["/home/mellamoarroz/Documents/RiqraChallenger/src/components/cart-container/cart-container.component.jsx"],"names":["React","EmptyCartContainer","CartLogoComponent","EmptyTitle","EmptySubtitle","MatchedItems","MatchedItem","ImageItem","TextItem","AddItem","ITEMS_DATA","CartContainer","searchBarInput","cartItems","setCartItems","filteredItems","items","filter","item","name","toLowerCase","includes","length","map","idx","isItemAdded","setIsItemAdded","useState","imageUrl","parseFloat","price","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,kBADF,EAEEC,iBAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,WANF,EAOEC,SAPF,EAQEC,QARF,EASEC,OATF,QAUQ,yBAVR;AAWC,OAAOC,UAAP,MAAuB,4BAAvB;;AAED,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA,SAAlB;AAA6BC,EAAAA;AAA7B,CAAD,KAAiD;AACrE,QAAMC,aAAa,GAAGL,UAAU,CAACM,KAAX,CAAiBC,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCT,cAAjC,CAAhC,CAAtB;AAEA,SACEA,cAAc,CAACU,MAAf,KAA0B,CAA1B,GAEET,SAAS,CAACS,MAAV,KAAqB,CAArB,GAEE,MAAC,kBAAD,QACE,MAAC,iBAAD,OADF,EAEE,MAAC,UAAD,6BAFF,EAKE,MAAC,aAAD,uDALF,CAFF,GAYE,kBAdJ,GAgBE,MAAC,YAAD,QAEEP,aAAa,CAACQ,GAAd,CAAkB,CAACL,IAAD,EAAOM,GAAP,KAAe;AAC/B,UAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC1B,KAAK,CAAC2B,QAAN,CAAe,KAAf,CAAtC;AACA,WACE,MAAC,WAAD;AAAa,MAAA,GAAG,EAAEH;AAAlB,OACE,MAAC,SAAD;AAAW,MAAA,QAAQ,EAAEN,IAAI,CAACU;AAA1B,MADF,EAEE,MAAC,QAAD,aAAYV,IAAI,CAACC,IAAjB,MAFF,EAGE,MAAC,QAAD;AAAU,MAAA,KAAK;AAAf,YAAmB,IAAGU,UAAU,CAACX,IAAI,CAACY,KAAN,CAAV,CAAuBC,OAAvB,CAA+B,CAA/B,CAAkC,EAAxD,MAHF,EAIE,MAAC,OAAD;AAAS,MAAA,SAAS,EAAEN,WAApB;AAAiC,MAAA,OAAO,EAAE,MAAM;AAC9CC,QAAAA,cAAc,CAAC,IAAD,CAAd;AACAZ,QAAAA,YAAY,CAAC,EAAD,CAAZ;AAGD;AALD,MAJF,CADF;AAaD,GAfD,CAFF,CAjBJ;AAsCD,CAzCD;;AA2CA,eAAeH,aAAf","sourcesContent":["import React from 'react';\nimport { \n  EmptyCartContainer, \n  CartLogoComponent,\n  EmptyTitle,\n  EmptySubtitle,\n  MatchedItems,\n  MatchedItem,\n  ImageItem,\n  TextItem,\n  AddItem\n } from './cart-container.styles';\n import ITEMS_DATA from '../../../public/items-data';\n\nconst CartContainer = ({ searchBarInput, cartItems, setCartItems }) => {\n  const filteredItems = ITEMS_DATA.items.filter(item => item.name.toLowerCase().includes(searchBarInput))\n  \n  return (\n    searchBarInput.length === 0\n    ?\n      cartItems.length === 0\n      ?\n        <EmptyCartContainer>\n          <CartLogoComponent/>\n          <EmptyTitle>\n            Your cart is empty\n          </EmptyTitle>\n          <EmptySubtitle>\n            Seems like you haven't chosen what to buy...\n          </EmptySubtitle>\n        </EmptyCartContainer>\n      :\n        <div/>\n    :\n      <MatchedItems>\n      {\n        filteredItems.map((item, idx) => {\n          const [isItemAdded, setIsItemAdded] = React.useState(false)\n          return (\n            <MatchedItem key={idx}>\n              <ImageItem imageSrc={item.imageUrl}/>\n              <TextItem> {item.name} </TextItem>\n              <TextItem price> {`$${parseFloat(item.price).toFixed(2)}`} </TextItem>\n              <AddItem itemAdded={isItemAdded} onClick={() => {\n                setIsItemAdded(true)\n                setCartItems({\n                  \n                })\n              }}/>\n            </MatchedItem>\n          )\n        })\n      }\n    </MatchedItems>\n  )\n}\n\nexport default CartContainer;"]},"metadata":{},"sourceType":"module"}